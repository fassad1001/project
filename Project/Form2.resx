<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAF0AAABgCAYAAAB/lX6wAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAQaSURBVHhe7ZBrrqM6EAazlrue2exd4Rn1KJZKpeYEjMFA
        uqTvR4L7Va+f4nRK+gRK+gRK+gRK+gRK+gRK+gRS6f/9/6cyMKaknxBT0k+I+VV60U9JF6/X61+OpKSD
        JryknwilHym+pANLbxlNSX+TyW4ZTUl/Q8lxH39HRtIcZh6/RroFtxv9/yha/8zjV0qnkBZ+j+yFvU1J
        f4ffW/bA3uYrpFMkZTh852yFfU1JT8L3zlrYzzxeOoVRxKewLssn2MuU9BVhD2cJ1ptHS7cgiuiNezKE
        NeZrpFPCiLB3C+FbU9J3hjMI35jHSqeMCCWMCvsbvjNfIZ0CRoX9I4ZvzeOl8/hRoexIBt+bR0qnEB4/
        IuwdWYI15nHSLYXH7417/wbrzKOl8/ARYe/Ib7DOlPSVYd/IJ1hrHiXdYnj4nrjvGlhvHiudR+8Je0bW
        wh6mpH8Ie26BPcxjpFNOhEf3xj23wD7mkdJ5cG/YL7IV9jKPk85j92SP8IC9zCOkUxCP7Ql7RXphT3N7
        6ZbEY3vCXntgT/Mo6Ty0J+wV2QP7mpL+DvtE9sLe5tbSKYlH9oS9RsDe5uuls0dkFJxhSjp6REbBGea2
        0imKB24Je0RGwjlmqPSjDshoc3jclnDXyGg4ywyTfvQRhHN43JawR2Q0nGUOk37EIQ3O4HFrw/qj4Dwz
        RDqPyDKa1peHrc2RexHONMOlRx1/R0bCvm3PtWFt5Eg41+yS7iM4yN9G4J6ctyasPRrONd3SeUCEQ1r8
        Zi/slc37Law9A842Q6RzgMN3kV7cJ5uVxXVnwR1Ml3QfwgFZ/L4H1mczlsK6yFlwB3OK9IhrtsLarH8W
        1kTOhHuYLumBD+KQpbhmLazJ+mZhTeRsuIvplh74MA7K4vdrYU3WNwtrImfDXcwu6YGP47CluOYT7V3W
        K8uW3kfBfcxu6QGPjHDgUlyzBN9kfRy+j8yCO5kh0gMfy6FZ/D7Db7I+Dt/PhDuZYdIDHsyhS+H7iOG3
        rN7h+9lwL3OY9AgHL8U1Df+f1TJ+PxvuZoZKb1gAF8ji905Ww/DtVeB+5hLSI65pyd4yfn8VuKM5RHpg
        GVxiKVtr/P5KcE9zmPTAUrjIUnreRq4G9zSHSg8oJsJl9sR9rwZ3NYdLDyyIC/XE/a4I9zWnSA8siktt
        DftcFe5rTpMeUFaEi62J668M9zanSg8sjst9imuvDPc2p0sPLI8LLsU1V4e7mynSA0vkko7f3gHub6ZJ
        DyiSSzp8F7kD3N9cRnqEi7bw+53gDWaq9AbFRtp8/38n2g2Zx8tK9393oznMPF5CemDJzB25hfQgEx65
        I7eR3riz7EZJn8DtpD+Bkj6Bkj6Bkj6Bkj6Bkj6BbumVMTEl/YSYkn5CTCq9OJaSPoGSfjo/P38BRqcD
        3nS5yu4AAAAASUVORK5CYII=
</value>
  </data>
</root>